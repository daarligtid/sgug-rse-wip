diff -Naur meson-0.51.2.orig/mesonbuild/compilers/compilers.py meson-0.51.2/mesonbuild/compilers/compilers.py
--- meson-0.51.2.orig/mesonbuild/compilers/compilers.py	2019-08-26 12:28:03.000000000 +0000
+++ meson-0.51.2/mesonbuild/compilers/compilers.py	2020-02-26 19:15:22.411981948 +0000
@@ -386,8 +386,8 @@
                 'b_sanitize': coredata.UserComboOption('Code sanitizer to use',
                                                        ['none', 'address', 'thread', 'undefined', 'memory', 'address,undefined'],
                                                        'none'),
-                'b_lundef': coredata.UserBooleanOption('Use -Wl,--no-undefined when linking', True),
-                'b_asneeded': coredata.UserBooleanOption('Use -Wl,--as-needed when linking', True),
+                'b_lundef': coredata.UserBooleanOption('Use -Wl,--no-undefined when linking', False),
+                'b_asneeded': coredata.UserBooleanOption('Use -Wl,--as-needed when linking', False),
                 'b_pgo': coredata.UserComboOption('Use profile guided optimization',
                                                   ['off', 'generate', 'use'],
                                                   'off'),
diff -Naur meson-0.51.2.orig/mesonbuild/envconfig.py meson-0.51.2/mesonbuild/envconfig.py
--- meson-0.51.2.orig/mesonbuild/envconfig.py	2019-08-26 12:28:03.000000000 +0000
+++ meson-0.51.2/mesonbuild/envconfig.py	2020-02-26 19:19:26.322227548 +0000
@@ -54,7 +54,9 @@
     'sparc',
     'sparc64',
     'x86',
-    'x86_64'
+    'x86_64',
+    'ip30',
+    'ip35',
 )
 
 # It would feel more natural to call this "64_BIT_CPU_FAMILES", but
diff -Naur meson-0.51.2.orig/mesonbuild/mesonlib.py meson-0.51.2/mesonbuild/mesonlib.py
--- meson-0.51.2.orig/mesonbuild/mesonlib.py	2019-08-26 12:28:03.000000000 +0000
+++ meson-0.51.2/mesonbuild/mesonlib.py	2020-02-26 19:21:15.350202748 +0000
@@ -463,6 +463,9 @@
 def is_freebsd() -> bool:
     return platform.system().lower() == 'freebsd'
 
+def is_irix() -> bool:
+    return platform.system().lower() == 'irix64'
+
 def exe_exists(arglist: List[str]) -> bool:
     try:
         if subprocess.run(arglist, timeout=10).returncode == 0:
@@ -669,7 +672,7 @@
                 return 'lib/' + archpath
         except Exception:
             pass
-    if is_freebsd():
+    if is_freebsd() or is_irix():
         return 'lib'
     if os.path.isdir('/usr/lib64') and not os.path.islink('/usr/lib64'):
         return 'lib64'
